#! /bin/bash

dclean() {
  docker system prune
}

dstop() {
  if [ $# -eq 0 ]; then
    docker stop "$(docker ps -q)"
  else
    docker stop "$@"
  fi
}

denv() {
  docker run --rm -it ubuntu bash
}

ngrok() {
  mapping=''
  args=''
  if [ "$(uname)" == 'Darwin' ]; then
    mapping='-p 4040:4040' # use host.docker.internal instead

    for var in "$@"
    do
        if [[ $var =~ ^[0-9]+$ ]];
        then
          args+="host.docker.internal:$var ";
        else
          args+="$var ";
        fi
    done

  else
    args="$*"
    mapping='--network host'
  fi

  # shellcheck disable=SC2086
  # shellcheck disable=SC2068
  docker run -it --rm \
    $mapping \
    klotzandrew/ngrok \
    ngrok ${args[@]}
}

aws() {
  local awsenv
  if [[ ! -z ${AWS_ACCESS_KEY_ID} ]]; then
    awsenv=" \
      -e "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" \
      -e "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" \
      -e "AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}" \
      -e "AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}" \
    "
  fi

  local awsprofile
  if [[ ! -z ${AWS_PROFILE} ]]; then
    awsprofile="-e "AWS_PROFILE=${AWS_PROFILE}""
  fi

	# we do not want to expand to '' when var is empty
	# shellcheck disable=SC2086
  docker run --rm \
    --log-driver none \
    -v "${HOME}/.aws:/root/.aws" \
    -v "$(pwd):/project" \
    -w "/project" \
    $awsenv \
    $awsprofile \
    klotzandrew/awscli "$@"
}

packer() {
  docker run --rm -it \
    -v "$(pwd):/project" \
    -w "/project" \
    -e "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" \
    -e "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" \
    -e "AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}" \
    -e "AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}" \
    hashicorp/packer:light "$@"
}

glances() {
  docker run --rm -it \
    -v /var/run/docker.sock:/var/run/docker.sock:ro \
    --pid host \
    --network host \
    docker.io/nicolargo/glances
}

# terraform() {
#   docker run --rm -it \
#   -v "$(pwd):/usr/src" \
#   -v "${HOME}/.config/gcloud:/root/.config/gcloud" \
#   -w "/usr/src" \
#   -e "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" \
#   -e "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" \
#   -e "AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}" \
#   -e "AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}" \
#   hashicorp/terraform:light "$@"
# }

# gcloud() {
#   docker run --rm -i \
#     -v "${HOME}/.config/gcloud:/root/.config/gcloud" \
#     -v "${HOME}/.kube:/root/.kube" \
#     -v "$(pwd):/usr/src" \
#     -w "/usr/src" \
#     google/cloud-sdk gcloud "$@"
# }

# kubectl() {
#   docker run --rm -i \
#     --network host \
#     -v "${HOME}/.config/gcloud:/root/.config/gcloud" \
#     -v "${HOME}/.kube:/root/.kube" \
#     -v "$(pwd):/usr/src" \
#     -w "/usr/src" \
#     klotzandrew/kubectl "$@"
# }

# can't run '/sbin/openrc': No such file or directory
# helm() {
#   docker run --rm \
#     -v "${HOME}/.config/gcloud:/root/.config/gcloud" \
#     -v "${HOME}/.kube:/root/.kube" \
#     klotzandrew/helm "$@"
# }
